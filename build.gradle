apply plugin: 'idea'
apply plugin: 'jetty'
apply plugin: 'java'


[jettyRun, jettyRunWar, jettyStop]*.stopPort = 8081
[jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stopKey'

jettyRun.contextPath = '/'

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

repositories {
    mavenCentral()
}


dependencies {
    compile 'org.springframework:spring-webmvc:3.2.6.RELEASE'
    compile 'org.springframework:spring-jdbc:3.1.0.RELEASE'
    compile 'org.mybatis:mybatis:3.2.1'
    compile 'log4j:log4j:1.2.17'
    compile 'postgresql:postgresql:9.1-901.jdbc4'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.seleniumhq.selenium:selenium-java:2.48.2'
    compile 'org.springframework:spring-webmvc:3.2.6.RELEASE'

    compile 'org.hibernate:hibernate-validator:4.2.0.Final'
    compile 'org.springframework.security:spring-security-taglibs:3.1.3.RELEASE'
    compile 'org.springframework.security:spring-security-config:3.1.3.RELEASE'
    compile 'org.apache.httpcomponents:httpclient:4.5.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.springframework:spring-test:3.2.6.RELEASE'
    testCompile 'com.github.detro:phantomjsdriver:1.2.0'
}


task createDB(type: Exec) {
    workingDir 'db'
    commandLine './createDb.sh'
}

task initDB(type: Exec) {
    workingDir 'db/migrations'
    commandLine './mybatis/bin/migrate', 'up'
}


// This zips up all code (to distribute). And the zip ends up under ./build/distributions
task zip(type: Zip) {
    from projectDir
    include 'src/**/*', 'test/**/*', 'scripts/**/*', 'gradle/**/*', 'build.gradle', 'gradlew', 'gradlew.bat', 'README.md'
}
test.dependsOn initDB
initDB.dependsOn createDB
build.dependsOn test


